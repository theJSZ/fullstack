{"ast":null,"code":"var _jsxFileName = \"/home/jussiran/fullstack/part2/kurssitiedot/src/components/Course.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Course = _ref => {\n  let {\n    course\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      parts: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      parts: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Course;\n\nconst Header = props => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: props.course.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Header;\n\nconst Content = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.parts.map(x => /*#__PURE__*/_jsxDEV(Part, {\n      partName: x.name,\n      partExercises: x.exercises\n    }, x.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 29\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Content;\n\nconst Total = props => {\n  const total = props.parts.reduce(function (sum, ex) {\n    return sum + ex.exercises;\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: /*#__PURE__*/_jsxDEV(\"b\", {\n      children: [\"total of \", total, \" exercises\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Total;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Course\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Total\");","map":{"version":3,"sources":["/home/jussiran/fullstack/part2/kurssitiedot/src/components/Course.js"],"names":["Course","course","parts","Header","props","name","Content","map","x","exercises","id","Total","total","reduce","sum","ex"],"mappings":";;;;AAAA,MAAMA,MAAM,GAAG,QAAgB;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AAC7B,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEA,MAAM,CAACC;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAED,MAAM,CAACC;AAArB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD,CARD;;KAAMF,M;;AAUN,MAAMG,MAAM,GAAIC,KAAD,IAAW;AACxB,sBACE;AAAA,cAAKA,KAAK,CAACH,MAAN,CAAaI;AAAlB;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;MAAMF,M;;AAMN,MAAMG,OAAO,GAAIF,KAAD,IAAW;AACzB,sBACE;AAAA,cACGA,KAAK,CAACF,KAAN,CAAYK,GAAZ,CAAgBC,CAAC,iBAAI,QAAC,IAAD;AAAiB,MAAA,QAAQ,EAAEA,CAAC,CAACH,IAA7B;AAAmC,MAAA,aAAa,EAAEG,CAAC,CAACC;AAApD,OAAWD,CAAC,CAACE,EAAb;AAAA;AAAA;AAAA;AAAA,YAArB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;MAAMJ,O;;AAQN,MAAMK,KAAK,GAAIP,KAAD,IAAW;AACvB,QAAMQ,KAAK,GAAGR,KAAK,CAACF,KAAN,CAAYW,MAAZ,CAAmB,UAASC,GAAT,EAAcC,EAAd,EAAkB;AACjD,WAAOD,GAAG,GAAGC,EAAE,CAACN,SAAhB;AACD,GAFa,EAEX,CAFW,CAAd;AAIA,sBACE;AAAA,2BACE;AAAA,8BAAaG,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAVD;;MAAMD,K","sourcesContent":["const Course = ({ course }) => {\n  return (\n    <>\n      <Header course={course} />\n      <Content parts={course.parts} />\n      <Total parts={course.parts} />\n    </>\n  )\n}\n\nconst Header = (props) => {\n  return (\n    <h1>{props.course.name}</h1>\n  )\n}\n\nconst Content = (props) => {\n  return (\n    <div>\n      {props.parts.map(x => <Part key={x.id} partName={x.name} partExercises={x.exercises} />)}\n    </div>\n  )\n}\n\nconst Total = (props) => {\n  const total = props.parts.reduce(function(sum, ex) {\n    return sum + ex.exercises\n  }, 0)\n \n  return (\n    <p>\n      <b>total of {total} exercises</b> \n    </p>\n  )\n}"]},"metadata":{},"sourceType":"module"}